//package form;
package rs.np.storage_manager_server.form;

import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;

import javax.swing.JDialog;
import javax.swing.JOptionPane;

import rs.np.storage_manager_server.property.PropertyFileOperation;
/**
 * {@link JDialog} forma za promenu podesavanja property fajla za konekciju sa bazom podataka
 * 
 * @author Milan
 */
public class SettingsForm extends javax.swing.JDialog {

    /**
     * parametrizovani konstruktor. Poziva super konstruktor, initComponents,
     * postavlja lokaciju na centar ekrana i naslov na "Setting change form".
     * Na kraju poziva privatnu metodu forme prepareForm
     * 
     * @param parent, tipa {@link java.awt.Frame}, predstavlja "roditeljski" Frame ove {@link JDialog} klase
     * @param modal, tipa boolean. Predstavlja modalnost prozora
     */
    public SettingsForm(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(null);
        setTitle("Setting change form");
        prepareForm();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblInfo = new javax.swing.JLabel();
        txtUrl = new javax.swing.JTextField();
        txtUsername = new javax.swing.JTextField();
        txtPassword = new javax.swing.JTextField();
        lblURL = new javax.swing.JLabel();
        lblUsername = new javax.swing.JLabel();
        lblPassword = new javax.swing.JLabel();
        btnSave = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        lblInfo.setText("Please input new database property values:");

        lblURL.setText("URL:");

        lblUsername.setText("Username:");

        lblPassword.setText("Password:");

        btnSave.setText("Save Changes");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblInfo, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnSave)))
                        .addGap(42, 42, 42))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblURL, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblUsername)
                            .addComponent(lblPassword))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtUrl, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(123, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(lblInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtUrl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblURL))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblUsername))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPassword))
                .addGap(18, 18, 18)
                .addComponent(btnSave)
                .addContainerGap(33, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    /**
     * Event handler za klik na dugme Save. Cuvaju se izmene
     * 
     * @param evt tipa {@link java.awt.event.ActionEvent}, dogadjaj klika na dugme
     */
    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
            // TODO add your handling code here:
            int retVal = JOptionPane.showConfirmDialog(this, "Are you sure you want to edit these properties?");
            if(retVal == 0){
                JOptionPane.showMessageDialog(this, "You have now successfully changed the database properties.");
            }
        try {
            
            saveUserProperties();
       
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
            Logger.getLogger(SettingsForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnSaveActionPerformed

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    /**
     * privatni atribut tipa {@link javax.swing.JButton}, dugme za cuvanje izmena
     */
    private javax.swing.JButton btnSave;
    /**
     * privatni atribut tipa {@link javax.swing.JLabel}, labela gde se korisniku naznacuje da treba da unese podatke o kredencijalima 
     * za konekciju sa bazom podataka
     */
    private javax.swing.JLabel lblInfo;
    /**
     * privatni atribut tipa {@link javax.swing.JLabel}, labela gde se korisniku naznacuje da treba da unese lozinku
     * za konekciju sa bazom podataka
     */
    private javax.swing.JLabel lblPassword;
    /**
     * privatni atribut tipa {@link javax.swing.JLabel}, labela gde se korisniku naznacuje da treba da unese URL
     * za konekciju sa bazom podataka
     */
    private javax.swing.JLabel lblURL;
    /**
     * privatni atribut tipa {@link javax.swing.JLabel}, labela gde se korisniku naznacuje da treba da unese korisnicko ime
     * za konekciju sa bazom podataka
     */
    private javax.swing.JLabel lblUsername;
    /**
     * privatni atribut tipa {@link javax.swing.JTextField}, tekstualno polje za unos nove lozinke baze podataka
     */
    private javax.swing.JTextField txtPassword;
    /**
     * privatni atribut tipa {@link javax.swing.JTextField}, tekstualno polje za unos novog URL-a baze podataka 
     */
    private javax.swing.JTextField txtUrl;
    /**
     * privatni atribut tipa {@link javax.swing.JTextField}, tekstualno polje za unos novog korisnickog imena baze podataka 
     */
    private javax.swing.JTextField txtUsername;
    // End of variables declaration//GEN-END:variables
    
    /**
     *  privatna metoda za cuvanje izmena u property fajlu; uzima vrednosti koje je korisnik uneo i cuva ih kao key/value parove u property fajlu.
     */
    private void saveUserProperties() {
        try {
            String url = txtUrl.getText().trim();
            String username = txtUsername.getText().trim();
            String password = txtPassword.getText().trim();
            List<String> userInputs = new ArrayList<>();
            userInputs.add(url);
            userInputs.add(username);
            userInputs.add(password);
            PropertyFileOperation.writeDataToPropertyFile(userInputs, "config/dbconfig.properties");
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
            Logger.getLogger(SettingsForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    /**
     * privatna metoda za pripremu forme. Ispisuje trenutne vrednosti iz property fajla u grafickim komponentama
     */
    private void prepareForm() {
        try {
            List<String> credentialList = PropertyFileOperation.readDataFromPropertyFile("config/dbconfig.properties");
            if(credentialList != null && credentialList.size() == 3){
                txtUrl.setText(credentialList.get(0));
                txtUsername.setText(credentialList.get(1));
                txtPassword.setText(credentialList.get(2));
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
            Logger.getLogger(SettingsForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}
